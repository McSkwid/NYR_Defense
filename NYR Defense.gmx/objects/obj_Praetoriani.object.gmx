<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_praetoriani</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Friction
friction = .5;

globalvar playerx,playery;
playerx = x;
playery = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///On player collision flash red

if isHit {
image_blend = c_red;
isHit = 0;
alarm[2] = 2;
} else image_blend = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fire Missile
if (ammo_count &gt;= 1) {
    var missile;
    missile = instance_create(x,y-4,obj_player_missile);
    missile.direction = 90;
    ammo_count -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fire Laser

switch larm {
    case 0:
        laser0 = instance_create(x,y-8,obj_player_laser);
        laser0.direction = 90;
        break;
    case 1:
        laser0 = instance_create(x,y-8,obj_player_laser);
        laser1 = instance_create(x-8,y-8,obj_player_laser);
        laser2 = instance_create(x+8,y-8,obj_player_laser);
        laser0.direction = 90;
        laser1.direction = 90;
        laser2.direction = 90;
        break;
    case 2:
        laser0 = instance_create(x,y-8,obj_player_laser);
        laser1 = instance_create(x-8,y-8,obj_player_laser);
        laser2 = instance_create(x+8,y-8,obj_player_laser);
        laser0.direction = 90;
        laser1.direction = 100;
        laser2.direction = 80;
        break;
    case 3:
        laser0 = instance_create(x-4,y-8,obj_player_laser);
        laser1 = instance_create(x-12,y-8,obj_player_laser);
        laser2 = instance_create(x+12,y-8,obj_player_laser);
        laser3 = instance_create(x+4,y-8,obj_player_laser);
        laser4 = instance_create(x-8,y-8,obj_player_laser);
        laser5 = instance_create(x+8,y-8,obj_player_laser);
        laser0.direction = 90;
        laser1.direction = 100;
        laser2.direction = 80;
        laser3.direction = 90;
        laser4.direction = 100;
        laser5.direction = 80;
        break;
}
audio_play_sound(snd_player_laser,1,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clamp health
if (health &gt;= 4) health = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Calculate Health

if (health &lt;= 0) {
    instance_deactivate_object(par_projectile);
    x = 160;
    y = 576;
    lives -= 1;
    health = 3;
    larm = 0;
    dmult = 1;
    audio_play_sound(snd_player_death,1,0);
}

if (lives &lt;= 0) {
    instance_deactivate_all(0);
    wave--;
    room_goto(rm_endscreen);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gather and execute Player Input
// movement controls
if (keyboard_check(ord("A"))) hspeed -= 1;
if (keyboard_check(ord("D"))) hspeed += 1;
if (keyboard_check(ord("W"))) vspeed -= 1;
if (keyboard_check(ord("S"))) vspeed += 1;
// speed limit
if (speed &gt; 6) speed = 6;
// firing controls
if (keyboard_check(vk_space)) if (alarm[0] = -1) alarm[0] = 5;
if (keyboard_check(vk_lshift)) if (alarm[1] = -1) alarm[1] = 20;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Calculate Collisions

// enemy collision
hit = instance_place(x,y,par_enemy);
hit1 = instance_place(x,y,par_enemy_projectile);
if ((hit != noone) or (hit1 != noone)) {
    health -= 1;
    if (hit) {
        hit.valScore = 0;
        hit.hp = 0;
    } else if (hit1) {
    instance_deactivate_object(hit1)
    }
    audio_play_sound(snd_player_hit,1,0);
    isHit = 1;
    alarm[2] = 1;
    
}

// powerup collision
powerhit = instance_place(x,y,par_powerup);
if powerhit != noone {
powerpickup = object_get_name(powerhit.object_index); //get name of powerup
switch powerpickup {
  case "obj_laserup":
  if dmult &lt;= 2 dmult = dmult * 2;
  break;
  case "obj_laserqup":
  if larm &lt;= 2 larm += 1;
  break;
  case "obj_missileup":
  ammo_count += 1;
  break;
  case "obj_shieldup":
  break;
  case "obj_healthup":
  health += 1;
  break;
}
powerhit.exist = 0;
}

// room collision
if (x &lt;= 16) x = 17 else x = min(x,room_width-17);
if (y &lt;= 16) y = 17 else y = min(y,room_height-17);

playerx = x;
playery = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>larm = 3;
dmult = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
